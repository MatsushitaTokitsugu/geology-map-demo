<!DOCTYPE html>
<html>
<head>
  <title>Current Location Geology</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    html, body { height: 100%; margin: 0; padding: 0; }
    #map { height: 100%; width: 100%; }
    #info { 
      position: absolute; 
      top: 10px; 
      left: 10px; 
      background: white; 
      padding: 10px; 
      border-radius: 5px; 
      box-shadow: 0 0 5px rgba(0,0,0,0.3); 
      font-family: Arial, sans-serif;
    }
  </style>
</head>
<body>
  <div id="map"></div>
  <div id="info">位置情報を取得中...</div>
  <script>
    let map, marker;

    function initMap() {
      // マップ初期化
      map = new google.maps.Map(document.getElementById("map"), {
        zoom: 14,
        mapTypeId: "terrain" // 地形重視のマップ
      });

      // サンプル地質データ (東京周辺)
      const geologyData = {
        "type": "FeatureCollection",
        "features": [
          {
            "type": "Feature",
            "properties": { "name": "沖積層 (Alluvium)", "color": "rgba(0, 255, 0, 0.5)" },
            "geometry": {
              "type": "Polygon",
              "coordinates": [[
                [139.64, 35.65], [139.68, 35.65],
                [139.68, 35.69], [139.64, 35.69],
                [139.64, 35.65]
              ]]
            }
          },
          {
            "type": "Feature",
            "properties": { "name": "花崗岩 (Granite)", "color": "rgba(255, 0, 0, 0.5)" },
            "geometry": {
              "type": "Polygon",
              "coordinates": [[
                [139.68, 35.67], [139.72, 35.67],
                [139.72, 35.71], [139.68, 35.71],
                [139.68, 35.67]
              ]]
            }
          }
        ]
      };
      map.data.addGeoJson(geologyData);
      map.data.setStyle(feature => ({
        fillColor: feature.getProperty("color"),
        strokeWeight: 1
      }));

      // 現在地取得
      if (navigator.geolocation) {
        navigator.geolocation.watchPosition(
          (position) => {
            const pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            map.setCenter(pos);

            // マーカー更新
            if (!marker) {
              marker = new google.maps.Marker({
                position: pos,
                map: map,
                title: "現在地"
              });
            } else {
              marker.setPosition(pos);
            }

            // 地質情報判定
            let geology = "不明";
            geologyData.features.forEach(feature => {
              const coords = feature.geometry.coordinates[0];
              const bounds = new google.maps.LatLngBounds();
              coords.forEach(coord => bounds.extend({ lat: coord[1], lng: coord[0] }));
              if (bounds.contains(pos)) {
                geology = feature.properties.name;
              }
            });
            document.getElementById("info").innerText = 
              `現在地: ${pos.lat.toFixed(4)}, ${pos.lng.toFixed(4)}\n地質: ${geology}`;
          },
          (error) => {
            document.getElementById("info").innerText = "位置情報取得に失敗: " + error.message;
          },
          { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }
        );
      } else {
        document.getElementById("info").innerText = "Geolocation非対応";
      }
    }
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC43e5KVYktzDMcMcHqKKn6BnLQAyEAG38&callback=initMap" async defer></script>
</body>
</html>
